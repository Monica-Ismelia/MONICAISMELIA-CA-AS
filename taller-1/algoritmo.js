
//  Sistema de Recompensas por Lectura en Biblioteca Escolar
// Aprendiz:  M√≥nica Ismelia Ca√±as Reyes
// Fecha: 20/06/2024
// Descripci√≥n: Este algoritmo calcula las recompensas que los estudiantes pueden ganar por leer libros en la biblioteca escolar.
// Cada libro le√≠do otorga puntos, y al acumular ciertos puntos, los estudiantes pueden canjearlos por premios.

// ***************ENTRADAS (INPUTS)******************//
const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});


// ***************FUNCIONES BASICAS******************
// Funci√≥n 1: Obtener puntos por libros le√≠dos seg√∫n el tipo de usuario
function obtenerPuntosPorLibro(tipo) {
    let puntos;
    switch (tipo.toUpperCase()) {
        case "ESTUDIANTE":
            puntos = 10;
            break;
        case "DOCENTE":
            puntos = 8;
            break;
        case "VISITANTE":
            puntos = 5;
            break;
        default:
            puntos = 0;
            console.log("‚ùå Tipo de estudiante no v√°lido.");
    }
    return puntos;
}

// Funci√≥n 2: Calcular puntos totales usando bucle for
function calcularPuntosTotales(puntosPorLibro, cantidadLibros) {
    let total = 0;
    console.log("\nüìö Registrando libros le√≠dos...");
    for (let i = 1; i <= cantidadLibros; i++) {
        total += puntosPorLibro;
        console.log(`  üìñ Libro ${i} registrado ‚Üí +${puntosPorLibro} puntos`);
    }
    return total;
}

// Funci√≥n 3: Asignar recompensa seg√∫n puntos
function asignarRecompensa(puntosTotales) {
    if (puntosTotales >= 50) {
        return "üèÖ Medalla de Lector";
    } else {
        return "üìö Sigue leyendo para ganar recompensas"; // ‚úÖ Corregido
    }
}

// Funci√≥n 4: Mostrar resumen final
function mostrarResumen(tipo, libros, puntosPorLibro, puntosTotales, recompensa) {
    console.log("\nüéâ RESUMEN FINAL:");
    console.log(`- Tipo de usuario: ${tipo}`);
    console.log(`- Libros le√≠dos: ${libros}`);
    console.log(`- Puntos por libro: ${puntosPorLibro}`);
    console.log(`- Puntos totales: ${puntosTotales}`);
    console.log(`- Recompensa: ${recompensa}`);

    if (puntosTotales >= 50) {
        console.log("üåü ¬°Felicidades! Has alcanzado una meta de lectura.");
    } else {
        console.log("üí™ ¬°Cada libro te acerca a tu pr√≥xima recompensa!");
    }
}

// =================== PROCESO PRINCIPAL ===================

console.log("‚òï Bienvenido a la Biblioteca Escolar!");
rl.question("üìå Ingresa el tipo de usuario (ESTUDIANTE, DOCENTE, VISITANTE): ", (tipo) => {
    // üîπ SCOPE: La variable 'tipo' tiene scope local dentro de este callback
    // Solo puede usarse aqu√≠, no afuera.

    rl.question("üìñ Ingresa la cantidad de libros le√≠dos: ", (cantidad) => {
        let librosLeidos = parseInt(cantidad);

        if (isNaN(librosLeidos)) {
            console.log("‚ùå Por favor, ingresa un n√∫mero v√°lido.");
            rl.close();
            return;
        }

        // 1. Obtener puntos por libro
         // üîπ HOISTING: Aqu√≠ se usa 'obtenerPuntosPorLibro()' antes de su declaraci√≥n
        // Pero funciona porque JavaScript la "eleva" al inicio del √°mbito.
        let puntosPorLibro = obtenerPuntosPorLibro(tipo);

        if (puntosPorLibro === 0) {
            rl.close();
            return;
        }

        // 2. Calcular puntos totales
        let puntosTotales = calcularPuntosTotales(puntosPorLibro, librosLeidos);

        // 3. Asignar recompensa
        let recompensa = asignarRecompensa(puntosTotales);

        // 4. Mostrar resumen final
        mostrarResumen(tipo, librosLeidos, puntosPorLibro, puntosTotales, recompensa);

        // Cerrar la interfaz
        rl.close();

        // Mensaje de despedida
        console.log("\nüëã ¬°Gracias por usar el sistema de recompensas y por disfrutar la lectura üìö‚ú®");
    });
});

// *****************fin proceso principal ******************//